{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","type","Component","Navbar","this","props","mode","changeMode","to","onClick","event","target","innerText","value","style","cursor","onChange","TextArea","state","text","dark","heading","setState","cols","rows","backgroundColor","color","toUpperCase","toLowerCase","document","getElementById","select","execCommand","split","length","wordWrap","App","useState","setMode","theme","setTheme","about","themeColor","body","console","log","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PA4HeA,EA1Hf,4JACI,WACI,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,kCAAkCC,GAAG,wBAApD,UACI,sBAAKD,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBC,GAAG,mBAApC,SACI,wBACID,UAAU,6BACVE,KAAK,SACL,iBAAe,WACf,iBAAe,qBACf,gBAAc,QACd,gBAAc,oBANlB,iCAWJ,qBACID,GAAG,oBACHD,UAAU,8BACV,kBAAgB,mBAChB,iBAAe,yBAJnB,SAMI,sBAAKA,UAAU,iBAAf,0FAEoB,oDAFpB,4DAOR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBC,GAAG,mBAApC,SACI,wBACID,UAAU,6BACVE,KAAK,SACL,iBAAe,WACf,iBAAe,qBACf,gBAAc,QACd,gBAAc,oBANlB,iCAWJ,qBACID,GAAG,oBACHD,UAAU,8BACV,kBAAgB,mBAChB,iBAAe,yBAJnB,SAMI,sBAAKA,UAAU,iBAAf,0FAEoB,oDAFpB,iHAQR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBC,GAAG,qBAApC,SACI,wBACID,UAAU,6BACVE,KAAK,SACL,iBAAe,WACf,iBAAe,uBACf,gBAAc,QACd,gBAAc,sBANlB,iCAWJ,qBACID,GAAG,sBACHD,UAAU,8BACV,kBAAgB,qBAChB,iBAAe,yBAJnB,SAMI,sBAAKA,UAAU,iBAAf,0FAEoB,oDAFpB,qQAUR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBC,GAAG,qBAApC,SACI,wBACID,UAAU,6BACVE,KAAK,SACL,iBAAe,WACf,iBAAe,uBACf,gBAAc,QACd,gBAAc,sBANlB,iCAWJ,qBACID,GAAG,sBACHD,UAAU,8BACV,kBAAgB,qBAChB,iBAAe,yBAJnB,SAMI,sBAAKA,UAAU,iBAAf,0FAEoB,oDAFpB,8QA1G5B,GAA2BG,aCiHZC,G,MA/Gf,4JACI,WACI,MAA6BC,KAAKC,MAA1BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAEd,OACI,8BACI,qBACIR,UAAS,yCAAoCO,EAApC,eACI,UAATA,EAAmB,QAAUA,EADxB,wBADb,SAKI,sBAAKP,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,sCAAsCS,GAAG,IAAzD,uBAGA,wBACIT,UAAU,iBACVE,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPf,SASI,sBAAMF,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BC,GAAG,YAA7C,UACI,qBAAID,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMS,GAAG,IAAIT,UAAU,WAAvB,oBAIJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMS,GAAG,SAAST,UAAU,WAA5B,wBAiBR,sBAAKA,UAAU,2DAAf,UACI,wBACIE,KAAK,SACLF,UAAS,YAAgB,UAATO,EAAmB,WAAa,IAChDG,QAAS,SAACC,GACNH,EAAWG,EAAMC,OAAOC,YAJhC,2BASA,wBACIX,KAAK,SACLF,UAAS,YAAgB,UAATO,EAAmB,WAAa,IAChDG,QAAS,SAACC,GACNH,EAAWG,EAAMC,OAAOC,YAJhC,4BASA,wBACIX,KAAK,SACLF,UAAS,YAAgB,UAATO,EAAmB,WAAa,IAChDG,QAAS,SAACC,GACNH,EAAWG,EAAMC,OAAOC,YAJhC,2BASA,uBACIX,KAAK,QACLF,UAAU,cACVU,QAAS,SAACC,GACNH,EAAWG,EAAMC,OAAOE,UAGhC,sBAAKd,UAAU,8FAAf,UACI,uBACIA,UAAU,mBACVE,KAAK,WACLD,GAAG,yBACHc,MAAO,CAAEC,OAAQ,WACjBC,SAAU,SAACN,GAAD,OAAWH,EAAWG,MAEpC,oBACIX,UAAS,oBACI,SAATO,EAAkB,SAAW,SAFrC,UAKc,SAATA,EAAkB,SAAW,QALlC,+BA9FpC,GAA4BJ,cCyGbe,EA3Gf,4MACIC,MAAQ,CAAEC,KAAM,uBAAwBC,MAAM,GADlD,4CAGI,WAAU,IAAD,OACL,EAAuBhB,KAAKc,MAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACd,EAA0BhB,KAAKC,MAAvBgB,EAAR,EAAQA,QAASf,EAAjB,EAAiBA,KASjB,OACI,8BACI,sBAAKP,UAAU,YAAf,UACI,qBAAIA,UAAS,oBAAwB,SAATO,EAAkB,aAAe,aAA7D,UACK,IACAe,EAFL,IAEc,sBAAMtB,UAAU,eAAhB,qBAA8C,OAE5D,0BACIA,UAAU,oBACVc,MAAOM,EACPH,SAAU,SAACN,GAAD,OAAW,EAAKY,SAAS,CAAEH,KAAMT,EAAMC,OAAOE,SACxDU,KAAK,KACLC,KAAK,KACLxB,GAAG,SACHc,MAAOM,GAAiB,SAATd,EAtBd,CACbmB,gBAAiB,eACjBC,MAAO,QAEO,CACdD,gBAAiB,OACjBC,MAAO,UAkBC,wBACI3B,UAAU,kBACVU,QAAS,kBACL,EAAKa,UAAS,SAACJ,GAAD,MAAY,CACtBC,KAAMD,EAAMC,KAAKQ,mBAGzB1B,KAAK,SAPT,kCAWA,wBACIF,UAAU,oBACVE,KAAK,SACLQ,QAAS,kBACL,EAAKa,UAAS,SAACJ,GAAD,MAAY,CACtBC,KAAMD,EAAMC,KAAKS,mBAL7B,kCAWA,wBACI7B,UAAU,oBACVE,KAAK,SACLQ,QAAS,WACQoB,SAASC,eAAe,UAChCC,SACLF,SAASG,YAAY,SAN7B,kBAWA,wBACIjC,UAAU,kBACVE,KAAK,SACLQ,QAAS,kBACL,EAAKa,UAAS,SAACJ,GAAD,MAAY,CACtBE,MAAOF,EAAME,UALzB,SASKA,EAAO,aAAe,cAG3B,oBAAIrB,UAAS,oBAAwB,SAATO,EAAkB,aAAe,aAA7D,+BAGA,sBACIP,UAAS,uBACI,SAATO,EAAkB,qBAAuB,sBAFjD,UAKI,uBAAMP,UAAU,eAAhB,cAAiCoB,EAAKc,MAAM,KAAKC,OAAjD,OALJ,SAMI,uBAAMnC,UAAU,eAAhB,cAAiCoB,EAAKe,OAAtC,OANJ,gBASA,sBACInC,UAAS,uBACI,SAATO,EAAkB,qBAAuB,sBAFjD,UAKI,uBAAMP,UAAU,eAAhB,cAA0D,KAAzBoB,EAAKc,MAAM,KAAKC,OAAjD,OAAyE,IAL7E,qBAQA,sBAAKnC,UAAS,eAAmB,SAATO,EAAkB,aAAe,aAAzD,UACI,oBAAIP,UAAU,OAAd,qBACA,mBAAGe,MAAO,CAAEqB,SAAU,aAAtB,SACKhB,EAAKe,OAAS,EAAIf,EAAO,+CAlGtD,GAA8BjB,a,MCuCfkC,MAlCf,WACI,MAAwBC,mBAAS,SAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACA,EAA0BD,mBAAS,oBAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAcA,OACI,cAAC,IAAD,UACI,sBAAKzC,UAAU,MAAf,UACI,cAAC,EAAD,CAAQ0C,MAAM,kBAAkBnC,KAAMA,EAAMiC,MAAOA,EAAOhC,WAfnD,SAACmC,GACH,SAATpC,GACAgC,EAAQ,SACRE,EAASE,GACTb,SAASc,KAAK7B,MAAMW,gBAAkBiB,EACtCE,QAAQC,IAAIH,KAEZF,EAAS,mBACTF,EAAQ,QACRT,SAASc,KAAK7B,MAAMW,gBAAkBiB,MAQlC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOI,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,CAAUzB,QAAQ,qBAAqBf,KAAMA,eCrBtDyC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ7B,SAASC,eAAe,SAM5BiB,M","file":"static/js/main.df439a3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class About extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"accordion accordion-flush pt-5 \" id=\"accordionFlushExample\">\n                    <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n                            <button\n                                className=\"accordion-button collapsed\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#flush-collapseOne\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"flush-collapseOne\"\n                            >\n                                Accordion Item #1\n                            </button>\n                        </h2>\n                        <div\n                            id=\"flush-collapseOne\"\n                            className=\"accordion-collapse collapse\"\n                            aria-labelledby=\"flush-headingOne\"\n                            data-bs-parent=\"#accordionFlushExample\"\n                        >\n                            <div className=\"accordion-body\">\n                                Placeholder content for this accordion, which is intended to\n                                demonstrate the <code>.accordion-flush</code> class. This is the\n                                first `item`s accordion body.\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n                            <button\n                                className=\"accordion-button collapsed\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#flush-collapseTwo\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"flush-collapseTwo\"\n                            >\n                                Accordion Item #2\n                            </button>\n                        </h2>\n                        <div\n                            id=\"flush-collapseTwo\"\n                            className=\"accordion-collapse collapse\"\n                            aria-labelledby=\"flush-headingTwo\"\n                            data-bs-parent=\"#accordionFlushExample\"\n                        >\n                            <div className=\"accordion-body\">\n                                Placeholder content for this accordion, which is intended to\n                                demonstrate the <code>.accordion-flush</code> class. This is the\n                                second s accordion body. Let s imagine this being filled with some\n                                actual content.\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n                            <button\n                                className=\"accordion-button collapsed\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#flush-collapseThree\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"flush-collapseThree\"\n                            >\n                                Accordion Item #3\n                            </button>\n                        </h2>\n                        <div\n                            id=\"flush-collapseThree\"\n                            className=\"accordion-collapse collapse\"\n                            aria-labelledby=\"flush-headingThree\"\n                            data-bs-parent=\"#accordionFlushExample\"\n                        >\n                            <div className=\"accordion-body\">\n                                Placeholder content for this accordion, which is intended to\n                                demonstrate the <code>.accordion-flush</code> class. This is the\n                                third accordion body. Nothing more exciting happening here in terms\n                                of content, but just filling up the space to make it look, at least\n                                at first glance, a bit more representative of how this would look in\n                                a real-world application.\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n                            <button\n                                className=\"accordion-button collapsed\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#flush-collapseThree\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"flush-collapseThree\"\n                            >\n                                Accordion Item #3\n                            </button>\n                        </h2>\n                        <div\n                            id=\"flush-collapseThree\"\n                            className=\"accordion-collapse collapse\"\n                            aria-labelledby=\"flush-headingThree\"\n                            data-bs-parent=\"#accordionFlushExample\"\n                        >\n                            <div className=\"accordion-body\">\n                                Placeholder content for this accordion, which is intended to\n                                demonstrate the <code>.accordion-flush</code> class. This is the\n                                third accordion body. Nothing more exciting happening here in terms\n                                of content, but just filling up the space to make it look, at least\n                                at first glance, a bit more representative of how this would look in\n                                a real-world application.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Navbar.css';\n\nexport class Navbar extends Component {\n    render() {\n        const { mode, changeMode } = this.props;\n\n        return (\n            <div>\n                <nav\n                    className={`navbar navbar-expand-lg navbar-${mode} bg-${\n                        mode === 'light' ? 'light' : mode\n                    } sticky-top align-it`}\n                >\n                    <div className=\"container-fluid\">\n                        <Link className=\"navbar-brand font-bold text-warning\" to=\"/\">\n                            TextUtils\n                        </Link>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\" />\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item\">\n                                    <Link to=\"/\" className=\"nav-link\">\n                                        Home\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/about\" className=\"nav-link\">\n                                        About\n                                    </Link>\n                                </li>\n                            </ul>\n\n                            {/* <div className=\"d-flex ms-auto\">\n                                <input\n                                    className=\"form-control me-2\"\n                                    type=\"search\"\n                                    placeholder=\"Search\"\n                                    aria-label=\"Search\"\n                                />\n                                <button className=\"btn btn-outline-warning\" type=\"submit\">\n                                    Search\n                                </button>\n                            </div> */}\n                            <div className=\"d-flex justify-content-center align-items-center ms-auto\">\n                                <button\n                                    type=\"button\"\n                                    className={`r ${mode === 'light' ? 'bordered' : ''}`}\n                                    onClick={(event) => {\n                                        changeMode(event.target.innerText);\n                                    }}\n                                >\n                                    rgb(53, 0, 0)\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`g ${mode === 'light' ? 'bordered' : ''}`}\n                                    onClick={(event) => {\n                                        changeMode(event.target.innerText);\n                                    }}\n                                >\n                                    rgb(0, 10, 24)\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`b ${mode === 'light' ? 'bordered' : ''}`}\n                                    onClick={(event) => {\n                                        changeMode(event.target.innerText);\n                                    }}\n                                >\n                                    rgb(2, 0, 32)\n                                </button>\n                                <input\n                                    type=\"color\"\n                                    className=\"customTheme\"\n                                    onClick={(event) => {\n                                        changeMode(event.target.value);\n                                    }}\n                                />\n                                <div className=\"form-check form-switch justify-content-center align-items-center align-self-center ms-auto \">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"checkbox\"\n                                        id=\"flexSwitchCheckDefault\"\n                                        style={{ cursor: 'pointer' }}\n                                        onChange={(event) => changeMode(event)}\n                                    />\n                                    <p\n                                        className={`px-1 text-${\n                                            mode === 'dark' ? 'light ' : 'dark '\n                                        }`}\n                                    >\n                                        {mode === 'dark' ? 'Light ' : 'Dark '} Mode\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nexport class TextArea extends Component {\n    state = { text: 'Input Your Text Here', dark: false };\n\n    render() {\n        const { text, dark } = this.state;\n        const { heading, mode } = this.props;\n        const darkMode = {\n            backgroundColor: 'rgb(0 10 24)',\n            color: '#fff',\n        };\n        const lightMode = {\n            backgroundColor: '#fff',\n            color: '#333',\n        };\n        return (\n            <div>\n                <div className=\"container\">\n                    <h3 className={`py-1 pt-3 ${mode === 'dark' ? 'text-light' : 'text-dark'}`}>\n                        {' '}\n                        {heading} <span className=\"text-warning\">Analyze</span>{' '}\n                    </h3>\n                    <textarea\n                        className=\"form-control my-3\"\n                        value={text}\n                        onChange={(event) => this.setState({ text: event.target.value })}\n                        cols=\"30\"\n                        rows=\"10\"\n                        id=\"myForm\"\n                        style={dark || mode === 'dark' ? darkMode : lightMode}\n                    />\n                    <button\n                        className=\"btn btn-warning\"\n                        onClick={() =>\n                            this.setState((state) => ({\n                                text: state.text.toUpperCase(),\n                            }))\n                        }\n                        type=\"button\"\n                    >\n                        Convert To UpperCase\n                    </button>\n                    <button\n                        className=\"btn btn-info mx-2\"\n                        type=\"button\"\n                        onClick={() =>\n                            this.setState((state) => ({\n                                text: state.text.toLowerCase(),\n                            }))\n                        }\n                    >\n                        Convert To LowerCase\n                    </button>\n                    <button\n                        className=\"btn btn-info mx-2\"\n                        type=\"button\"\n                        onClick={() => {\n                            const inpt = document.getElementById('myForm');\n                            inpt.select();\n                            document.execCommand('copy');\n                        }}\n                    >\n                        Copy\n                    </button>\n                    <button\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        onClick={() =>\n                            this.setState((state) => ({\n                                dark: !state.dark,\n                            }))\n                        }\n                    >\n                        {dark ? 'Light Mode' : 'Dark Mode'}\n                    </button>\n\n                    <h3 className={`my-3 mb-1 ${mode === 'dark' ? 'text-light' : 'text-dark'}`}>\n                        Your Text Summery\n                    </h3>\n                    <div\n                        className={`p-3 bg-light ${\n                            mode === 'dark' ? 'bg-dark text-light' : 'text-dark bg-light'\n                        }`}\n                    >\n                        <span className=\"text-primary\"> {text.split(' ').length} </span> Words\n                        <span className=\"text-primary\"> {text.length} </span>\n                        Characters\n                    </div>\n                    <div\n                        className={`p-3 bg-light ${\n                            mode === 'dark' ? 'bg-dark text-light' : 'text-dark bg-light'\n                        }`}\n                    >\n                        <span className=\"text-primary\"> {text.split(' ').length * 0.008} </span>{' '}\n                        Minutes To Read\n                    </div>\n                    <div className={`py-3 ${mode === 'dark' ? 'text-light' : 'text-dark'}`}>\n                        <h2 className=\"my-2\">Preview</h2>\n                        <p style={{ wordWrap: 'breakWord' }}>\n                            {text.length > 0 ? text : 'Please Enter A Text To Preview'}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TextArea;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport './css/App.css';\n\nfunction App() {\n    const [mode, setMode] = useState('light');\n    const [theme, setTheme] = useState('rgb(255,255,255)');\n\n    const changeMode = (themeColor) => {\n        if (mode === 'dark') {\n            setMode('light');\n            setTheme(themeColor);\n            document.body.style.backgroundColor = themeColor;\n            console.log(themeColor);\n        } else {\n            setTheme('rgb(255,255,255');\n            setMode('dark');\n            document.body.style.backgroundColor = themeColor;\n        }\n    };\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar about=\"About TextUtils\" mode={mode} theme={theme} changeMode={changeMode} />\n                {/* <Alert /> */}\n                <Switch>\n                    <Route path=\"/about\">\n                        <About />\n                    </Route>\n                    <Route path=\"/\">\n                        <TextArea heading=\"Input Your Text To\" mode={mode} />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}